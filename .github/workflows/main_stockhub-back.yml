# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions


name: Build, Test and Deploy Node.js app to Azure Web App - stockhub-back

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: npm ci
      - run: npx tsc --noEmit
      - run: npm run lint --if-present
      - run: npm run test:unit


  integration-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: stockhub_test
        ports:
          - 3308:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: npm ci

      #      - name: Reset & migrate database for tests
      #        run: npx prisma migrate reset --force --skip-generate --schema=prisma/schema.prisma
      #        env:
      #          DATABASE_URL: "mysql://root:root@localhost:3308/stockhub_test"
      - name: Create database schema with SQL
        run: |
          mysql -h 127.0.0.1 -P 3308 -u root -proot stockhub_test < sql/initialize_database.sql
          
          - name: Generate Prisma Client after schema creation
            run: npx prisma db pull --schema=prisma/schema.prisma --force && npx prisma generate --schema=prisma/schema.prisma
            env:
              DATABASE_URL: "mysql://root:root@localhost:3308/stockhub_test"

      - name: Run integration tests
        run: npm run test:integration
        env:
          DATABASE_URL: "mysql://root:root@localhost:3308/stockhub_test"


  build-and-deploy:
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - integration-tests
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Remove node_modules
        run: rm -rf node_modules

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "stockhub-back"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0AA0D7238FBD4490A877AF8BEC437386 }}
          package: .

